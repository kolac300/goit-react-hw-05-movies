{"version":3,"file":"static/js/681.2945faf4.chunk.js","mappings":"+SAEaA,EAAY,mCAAG,oGACHC,EAAAA,EAAAA,IAAA,4FADG,cACpBC,EADoB,yBAInBA,EAASC,MAJU,2CAAH,qDAMZC,EAAY,mCAAG,WAAMC,GAAN,uFACHJ,EAAAA,EAAAA,IAAA,kHACsFI,EADtF,gCADG,cACpBH,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZG,EAAU,mCAAG,WAAMC,GAAN,uFACDN,EAAAA,EAAAA,IAAA,6CACiBM,EADjB,6DADC,cAClBL,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAMVK,EAAU,mCAAG,WAAMD,GAAN,uFACDN,EAAAA,EAAAA,IAAA,6CACiBM,EADjB,qEADC,cAClBL,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAMVM,EAAU,mCAAG,WAAMF,GAAN,uFACDN,EAAAA,EAAAA,IAAA,6CACiBM,EADjB,4EADC,cAClBL,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,qD,6HCtBVO,EAAU,WACtB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAQR,OAPAE,EAAAA,EAAAA,YAAU,YACTP,EAAAA,EAAAA,IAAWK,GAAIG,MAAK,SAAAd,GACnBU,EAAWV,EAAKe,QAChB,GACD,GAAE,CAACJ,IAIHF,EAAQO,QAAS,wBAAKP,EAAQQ,KAAI,SAAAC,GAAM,OAAI,2BAC3C,sCAAcA,EAAOC,WACrB,sCAAcD,EAAOE,cAF+BC,EAAAA,EAAAA,MAAb,OAI/B,yDAEV,C,uDCrBM,IAkBIA,EAAS,eAACC,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACf,EAAIgB,GAWvD,OAREhB,IAFFgB,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["FakeAPI.js","components/Reviews.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import axios from 'axios';\n\nexport const PopularToday = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=fe02c0055a8ac0e9aa5bec4d6b45ebd7`\n  );\n  return response.data;\n};\nexport const SearchMovies = async searchParam => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=fe02c0055a8ac0e9aa5bec4d6b45ebd7&language=en-US&query=${searchParam}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=fe02c0055a8ac0e9aa5bec4d6b45ebd7&language=en-US`\n  );\n  return response.data;\n};\nexport const getCredits = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=fe02c0055a8ac0e9aa5bec4d6b45ebd7&language=en-US`\n  );\n  return response.data;\n};\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=fe02c0055a8ac0e9aa5bec4d6b45ebd7&language=en-US&page=1`\n  );\n  return response.data;\n};\nexport const getImg = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/images?api_key=fe02c0055a8ac0e9aa5bec4d6b45ebd7&language=en-US`\n  );\n  return response.data;\n};\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n\nconst products = [\n  {\n    id: 'h-1',\n    name: 'Hoodie 1',\n    cast: 'heroes 1234',\n    reviews: 'ddddddddd',\n  },\n  {\n    id: 'h-2',\n    name: 'Hoodie 2',\n    cast: 'heroes 1234',\n    reviews: 'ddddddddd',\n  },\n  {\n    id: 'h-3',\n    name: 'Hoodie 3',\n    cast: 'heroes 1234',\n    reviews: 'ddddddddd',\n  },\n  {\n    id: 's-1',\n    name: 'Sneakers 1',\n    cast: 'heroes 1234',\n    reviews: 'ddddddddd',\n  },\n  {\n    id: 's-2',\n    name: 'Sneakers 2',\n    cast: 'heroes 1234',\n    reviews: 'ddddddddd',\n  },\n  {\n    id: 's-3',\n    name: 'Sneakers 3',\n    cast: 'heroes 1234',\n    reviews: 'ddddddddd',\n  },\n  {\n    id: 's-4',\n    name: 'Sneakers 4',\n    cast: 'heroes 1234',\n    reviews: 'ddddddddd',\n  },\n  { id: 'p-1', name: 'Pants 1', cast: 'heroes 1234', reviews: 'ddddddddd' },\n  { id: 'p-2', name: 'Pants 2', cast: 'heroes 1234', reviews: 'ddddddddd' },\n  { id: 'p-3', name: 'Pants 3', cast: 'heroes 1234', reviews: 'ddddddddd' },\n];\n\nexport const getProducts = () => {\n  return products;\n};\n\nexport const getProductById = productId => {\n  return products.find(product => product.id === productId);\n};\n// https://api.themoviedb.org/3/movie/550?api_key=fe02c0055a8ac0e9aa5bec4d6b45ebd7\n","import { getReviews } from 'FakeAPI'\nimport { nanoid } from 'nanoid'\nimport React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\n\nexport const Reviews = () => {\n\tconst [reviews, setReviews] = useState([])\n\tconst { id } = useParams()\n\tuseEffect(() => {\n\t\tgetReviews(id).then(data => {\n\t\t\tsetReviews(data.results)\n\t\t})\n\t}, [id])\n\n\n\treturn (\n\t\treviews.length ? <ul>{reviews.map(review => <li key={nanoid()} >\n\t\t\t<h3>author : {review.author}</h3>\n\t\t\t<p>content : {review.content}</p>\n\t\t</li>)\n\t\t}</ul> : <h1>we have not found any reviews</h1>\n\t)\n}\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["PopularToday","axios","response","data","SearchMovies","searchParam","getDetails","movieId","getCredits","getReviews","Reviews","useState","reviews","setReviews","id","useParams","useEffect","then","results","length","map","review","author","content","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}