{"version":3,"file":"static/js/450.b7035cba.chunk.js","mappings":"+SAEaA,EAAY,mCAAG,oGACHC,EAAAA,EAAAA,IAAA,4FADG,cACpBC,EADoB,yBAInBA,EAASC,MAJU,2CAAH,qDAMZC,EAAY,mCAAG,WAAMC,GAAN,uFACHJ,EAAAA,EAAAA,IAAA,kHACsFI,EADtF,gCADG,cACpBH,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOZG,EAAU,mCAAG,WAAMC,GAAN,uFACDN,EAAAA,EAAAA,IAAA,6CACiBM,EADjB,6DADC,cAClBL,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAMVK,EAAU,mCAAG,WAAMD,GAAN,uFACDN,EAAAA,EAAAA,IAAA,6CACiBM,EADjB,qEADC,cAClBL,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,sDAMVM,EAAU,mCAAG,WAAMF,GAAN,uFACDN,EAAAA,EAAAA,IAAA,6CACiBM,EADjB,4EADC,cAClBL,EADkB,yBAIjBA,EAASC,MAJQ,2CAAH,qD,uGCtBVO,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACtBC,GAAWC,EAAAA,EAAAA,MACjB,OACC,SAAC,IAAD,UAAYF,EAAOG,KAAI,SAAAC,GAAK,OAC3B,UAAC,IAAD,CAA2BC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAArE,WACC,gBAAKQ,IAAG,6DAAwDL,EAAMM,aAAeC,IAAI,QAD1F,KACmG,kBACjGP,EAAMQ,OAASR,EAAMS,KAFvB,OAAiBC,EAAAA,EAAAA,MADU,KAO7B,C,+GCZYC,EAAYC,EAAAA,GAAAA,IAAH,iaAmBTC,GAAaD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,qP,0GCpBVG,EAAY,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,eAAgBC,EAAa,EAAbA,OAC3C,OACC,0BACC,kBAAOC,KAAK,OAAOC,MAAOF,EAAQG,SAAUJ,KAG9C,E,iBCHYK,EAAS,WAErB,OAAuBC,EAAAA,EAAAA,MACjBC,GADN,eAC2BC,IAAI,KAC/B,GAA4BC,EAAAA,EAAAA,UAASF,GAAS,IAA9C,eAAON,EAAP,KAAeS,EAAf,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAO7B,EAAP,KAAe+B,EAAf,MACAC,EAAAA,EAAAA,YAAU,WACa,KAAlBX,EAAOY,SACVxC,EAAAA,EAAAA,IAAa4B,GAAQa,MAAK,SAAAlC,GACzB+B,EAAU/B,EAAOmC,QACjB,GACF,GAAE,CAACd,IAKJ,OACC,iCACC,SAACF,EAAD,CAAWC,eALU,SAAAgB,GACtBN,EAAUM,EAAEC,OAAOd,MACnB,EAG4CF,OAAQA,KACnD,SAACtB,EAAA,EAAD,CAAYC,OAAQA,MAGtB,C,uDC1BM,IAkBIc,EAAS,eAACwB,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAACpC,EAAIqC,GAWvD,OARErC,IAFFqC,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["FakeAPI.js","components/MoviesList.jsx","components/MoviesList.styled.js","components/SearchBar.jsx","pages/Movies.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import axios from 'axios';\n\nexport const PopularToday = async () => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=fe02c0055a8ac0e9aa5bec4d6b45ebd7`\n  );\n  return response.data;\n};\nexport const SearchMovies = async searchParam => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=fe02c0055a8ac0e9aa5bec4d6b45ebd7&language=en-US&query=${searchParam}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=fe02c0055a8ac0e9aa5bec4d6b45ebd7&language=en-US`\n  );\n  return response.data;\n};\nexport const getCredits = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=fe02c0055a8ac0e9aa5bec4d6b45ebd7&language=en-US`\n  );\n  return response.data;\n};\nexport const getReviews = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=fe02c0055a8ac0e9aa5bec4d6b45ebd7&language=en-US&page=1`\n  );\n  return response.data;\n};\nexport const getImg = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/images?api_key=fe02c0055a8ac0e9aa5bec4d6b45ebd7&language=en-US`\n  );\n  return response.data;\n};\n\n// /trending/get-trending список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// /search/search-movies пошук фільму за ключовим словом на сторінці фільмів.\n// /movies/get-movie-details запит повної інформації про фільм для сторінки кінофільму.\n// /movies/get-movie-credits запит інформації про акторський склад для сторінки кінофільму.\n// /movies/get-movie-reviews запит оглядів для сторінки кінофільму.\n\nconst products = [\n  {\n    id: 'h-1',\n    name: 'Hoodie 1',\n    cast: 'heroes 1234',\n    reviews: 'ddddddddd',\n  },\n  {\n    id: 'h-2',\n    name: 'Hoodie 2',\n    cast: 'heroes 1234',\n    reviews: 'ddddddddd',\n  },\n  {\n    id: 'h-3',\n    name: 'Hoodie 3',\n    cast: 'heroes 1234',\n    reviews: 'ddddddddd',\n  },\n  {\n    id: 's-1',\n    name: 'Sneakers 1',\n    cast: 'heroes 1234',\n    reviews: 'ddddddddd',\n  },\n  {\n    id: 's-2',\n    name: 'Sneakers 2',\n    cast: 'heroes 1234',\n    reviews: 'ddddddddd',\n  },\n  {\n    id: 's-3',\n    name: 'Sneakers 3',\n    cast: 'heroes 1234',\n    reviews: 'ddddddddd',\n  },\n  {\n    id: 's-4',\n    name: 'Sneakers 4',\n    cast: 'heroes 1234',\n    reviews: 'ddddddddd',\n  },\n  { id: 'p-1', name: 'Pants 1', cast: 'heroes 1234', reviews: 'ddddddddd' },\n  { id: 'p-2', name: 'Pants 2', cast: 'heroes 1234', reviews: 'ddddddddd' },\n  { id: 'p-3', name: 'Pants 3', cast: 'heroes 1234', reviews: 'ddddddddd' },\n];\n\nexport const getProducts = () => {\n  return products;\n};\n\nexport const getProductById = productId => {\n  return products.find(product => product.id === productId);\n};\n// https://api.themoviedb.org/3/movie/550?api_key=fe02c0055a8ac0e9aa5bec4d6b45ebd7\n","import { nanoid } from 'nanoid'\nimport React from 'react'\nimport { useLocation } from 'react-router-dom'\nimport { StyledLink, StyledDiv } from './MoviesList.styled'\n// import PropTypes from 'prop-types';\nexport const MoviesList = ({ movies }) => {\n\tconst location = useLocation()\n\treturn (\n\t\t<StyledDiv>{movies.map(movie =>\n\t\t\t<StyledLink key={nanoid()} to={`/movies/${movie.id}`} state={{ from: location }}>\n\t\t\t\t<img src={`https://www.themoviedb.org/t/p/w138_and_h175_bestv2${movie.poster_path}`} alt=\"img\" /> <br />\n\t\t\t\t{movie.title || movie.name} </StyledLink>\n\t\t)\n\t\t}</StyledDiv>\n\t)\n}\n\n// MoviesList.propTypes{\n// object\n// }","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledDiv = styled.div`\n  list-style: none;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  gap: 3px;\n  margin: 0;\n  padding: 0;\n  li {\n    width: 100%;\n    text-align: center;\n    font-size: 1.5em;\n    color: crimson;\n    box-shadow: 0px 5px 10px 0px rgba(0, 0, 0, 0.5);\n    border: black solid 2px;\n    border-radius: 5px;\n    box-sizing: border-box;\n    background-color: silver;\n  }\n`;\nexport const StyledLink = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n  background-color: silver;\n  text-align: center;\n\n  img {\n    width: 100%;\n  }\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  &.active {\n    color: green;\n  }\n`;\n","import React from 'react'\n\nexport const SearchBar = ({ onSearchChange, search }) => {\n\treturn (\n\t\t<div>\n\t\t\t<input type=\"text\" value={search} onChange={onSearchChange} />\n\t\t</div>\n\t)\n}\n","import { MoviesList } from 'components/MoviesList'\nimport { SearchBar } from 'components/SearchBar'\nimport { SearchMovies } from 'FakeAPI'\nimport React, { useEffect, useState } from 'react'\nimport { useSearchParams } from 'react-router-dom'\nexport const Movies = () => {\n\t// const location = useLocation()\n\tconst [searchParams] = useSearchParams()\n\tconst query = searchParams.get('q')\n\tconst [search, setSearch] = useState(query || '')\n\tconst [movies, setMovies] = useState([])\n\tuseEffect(() => {\n\t\tif (search.trim() !== \"\")\n\t\t\tSearchMovies(search).then(movies => {\n\t\t\t\tsetMovies(movies.results)\n\t\t\t})\n\t}, [search])\n\n\tconst onSearchChange = e => {\n\t\tsetSearch(e.target.value)\n\t}\n\treturn (\n\t\t<>\n\t\t\t<SearchBar onSearchChange={onSearchChange} search={search} />\n\t\t\t<MoviesList movies={movies} />\n\t\t</>\n\t)\n}\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["PopularToday","axios","response","data","SearchMovies","searchParam","getDetails","movieId","getCredits","getReviews","MoviesList","movies","location","useLocation","map","movie","to","id","state","from","src","poster_path","alt","title","name","nanoid","StyledDiv","styled","StyledLink","NavLink","SearchBar","onSearchChange","search","type","value","onChange","Movies","useSearchParams","query","get","useState","setSearch","setMovies","useEffect","trim","then","results","e","target","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}